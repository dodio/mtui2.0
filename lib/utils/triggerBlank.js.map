{"version":3,"sources":["../../dev/mtui/utils/triggerBlank.jsx"],"names":["getXY","obj","width","offsetWidth","height","offsetHeight","left","parseInt","style","top","clickBlank","callback","events","_btn","onlybtn","handler","e","modal","y","clientY","document","body","scrollTop","btn","btnJudge","clientX","removeEventListener","addEventListener","offClickBlank"],"mappings":";;;;;;;AAIA;;AAEA,SAASA,KAAT,CAAeC,GAAf,EAAmB;AACf,WAAO;AACHC,eAAOD,IAAIE,WADR;AAEHC,gBAAQH,IAAII,YAFT;AAGHC,cAAMC,SAASN,IAAIO,KAAJ,CAAUF,IAAnB,EAAyB,EAAzB,KAAgC,wBAAWL,GAAX,CAHnC;AAIHQ,aAAKF,SAASN,IAAIO,KAAJ,CAAUC,GAAnB,EAAwB,EAAxB,KAA+B,uBAAUR,GAAV;AAJjC,KAAP;AAMH;;AAED;AAfA;;;;AAgBA,SAASS,UAAT,CAAoBT,GAApB,EAAyBU,QAAzB,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,OAAjD,EAAyD;;AAErDF,aAASA,UAAU,OAAnB;;AAEA;AACA,QAAIG,WAAU,iBAASC,CAAT,EAAW;AACrB,YAAIC,QAAQjB,MAAMC,GAAN,CAAZ;AACA,YAAIiB,IAAIF,EAAEG,OAAF,GAAYC,SAASC,IAAT,CAAcC,SAAlC;;AAEA;AACA,YAAIC,MAAM,IAAV;AAAA,YAAgBC,WAAW,KAA3B;AACA,YAAGX,QAAQD,WAAW,WAAtB,EAAkC;AAC9BW,kBAAMvB,MAAMa,IAAN,CAAN;AACA,gBAAGG,EAAES,OAAF,IAAaF,IAAIjB,IAAjB,IAAyBU,EAAES,OAAF,IAAaF,IAAIjB,IAAJ,GAAWiB,IAAIrB,KAArD,IAA8DgB,KAAKK,IAAId,GAAvE,IAA8ES,KAAKK,IAAId,GAAJ,GAAUc,IAAInB,MAApG,EAA2G;AACvGoB,2BAAW,IAAX;AACH;AACJ;;AAED;AACA,YAAG,CAACV,OAAD,IAAaE,EAAES,OAAF,IAAaR,MAAMX,IAAnB,IAA2BU,EAAES,OAAF,IAAaR,MAAMX,IAAN,GAAaW,MAAMf,KAA3D,IAAoEgB,KAAKD,MAAMR,GAA/E,IAAsFS,KAAKD,MAAMR,GAAN,GAAYQ,MAAMb,MAA1H,IAAqIoB,QAAxI,EAAiJ;AAC7Ib,qBAAS,IAAT;AACH,SAFD,MAEK;AACDA,qBAAS,KAAT;AACA,gBAAGE,QAAQD,WAAW,WAAtB,EAAkC;AAC9BQ,yBAASM,mBAAT,CAA6Bd,MAA7B,EAAqCG,QAArC;AACAA,2BAAU,IAAV;AACH;AACJ;AACJ,KAvBD;AAwBAK,aAASO,gBAAT,CAA0Bf,MAA1B,EAAkCG,QAAlC;;AAEA,WAAOA,QAAP;AACH;;AAED,SAASa,aAAT,CAAuBb,OAAvB,EAAgCH,MAAhC,EAAuC;AACnC,QAAI,CAACG,OAAL,EAAc;AACV;AACH;AACDH,aAASA,UAAU,OAAnB;AACAQ,aAASM,mBAAT,CAA6Bd,MAA7B,EAAqCG,OAArC;AACAA,cAAU,IAAV;AACH;;QAEQf,K,GAAAA,K;QAAOU,U,GAAAA,U;QAAYkB,a,GAAAA,a;;;;;;;;kCArDnB5B,K;;kCAUAU,U;;kCAkCAkB,a","file":"triggerBlank.js","sourcesContent":["/**\r\n* @type class操作\r\n* @author : Mantou\r\n*/\r\nimport {offsetTop, offsetLeft} from './offset';\r\n\r\nfunction getXY(obj){\r\n    return {\r\n        width: obj.offsetWidth,\r\n        height: obj.offsetHeight,\r\n        left: parseInt(obj.style.left, 10) || offsetLeft(obj),\r\n        top: parseInt(obj.style.top, 10) || offsetTop(obj)\r\n    };\r\n}\r\n\r\n// 如果点击了空白区域就是false\r\nfunction clickBlank(obj, callback, events, _btn, onlybtn){\r\n\r\n    events = events || 'click';\r\n\r\n    // 点击事件\r\n    var handler = function(e){\r\n        let modal = getXY(obj);\r\n        let y = e.clientY + document.body.scrollTop;\r\n\r\n        // 如果是hover\r\n        let btn = null, btnJudge = false;\r\n        if(_btn && events === 'mousemove'){\r\n            btn = getXY(_btn);\r\n            if(e.clientX >= btn.left && e.clientX <= btn.left + btn.width && y >= btn.top && y <= btn.top + btn.height){\r\n                btnJudge = true;\r\n            }\r\n        }\r\n\r\n        // 判断点击的边界\r\n        if(!onlybtn && (e.clientX >= modal.left && e.clientX <= modal.left + modal.width && y >= modal.top && y <= modal.top + modal.height) || btnJudge){\r\n            callback(true);\r\n        }else{\r\n            callback(false);\r\n            if(_btn && events !== 'mousemove'){\r\n                document.removeEventListener(events, handler);\r\n                handler = null;\r\n            }\r\n        }\r\n    };\r\n    document.addEventListener(events, handler);\r\n\r\n    return handler;\r\n}\r\n\r\nfunction offClickBlank(handler, events){\r\n    if (!handler) {\r\n        return;\r\n    }\r\n    events = events || 'click';\r\n    document.removeEventListener(events, handler);\r\n    handler = null;\r\n}\r\n\r\nexport { getXY, clickBlank, offClickBlank};"]}
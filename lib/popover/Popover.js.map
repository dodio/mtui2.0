{"version":3,"sources":["../../dev/mtui/popover/Popover.jsx"],"names":["Popover","props","state","show","div","document","createElement","setAttribute","handler","btn","mid","e","mark","self","setState","renderDiv","showBack","trigger","getElementById","closeBack","stopPropagation","preventDefault","showOrHide","children","onMouseMove","onClick","MT_MS","removeNode","remove","unmountComponentAtNode","findDOMNode","onClickHandler","prevProps","prevState","Date","getTime","setMid","dom","body","appendChild","render","className","style","getPlace","bind","place","content","onMouseOver","other","otherChild","child","Children","only","onMouseHandler","cloneElement","defaultProps"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;IAEMA,O;;;AAUF;AACA,qBAAaC,KAAb,EAAoB;AAAA;;AAAA,4IACVA,KADU;;AAEhB,cAAKC,KAAL,GAAa;AACTC,kBAAM;AADG,SAAb;AAGA,cAAKC,GAAL,GAAWC,SAASC,aAAT,CAAuB,KAAvB,CAAX;AACA,cAAKF,GAAL,CAASG,YAAT,CAAsB,OAAtB,EAA+B,QAA/B;AACA,cAAKC,OAAL,GAAe,IAAf;AACA,cAAKC,GAAL,GAAW,IAAX;AACA,cAAKC,GAAL,GAAW,IAAX;AATgB;AAUnB;;AAED;;;AArBA;;;;;mCAsBW;AACP,mBAAO,sBAAS,KAAKD,GAAd,CAAP;AACH;;AAED;;;;mCACWE,C,EAAGC,I,EAAK;AACf,gBAAIC,OAAO,IAAX;;AAEA,iBAAKC,QAAL,CAAc;AACVX,sBAAMS;AADI,aAAd,EAEG,YAAU;AACT,qBAAKG,SAAL,CAAe,IAAf;;AAEA;AACA,oBAAGH,IAAH,EAAQ;;AAEJ,wBAAG,KAAKX,KAAL,CAAWe,QAAd,EAAuB;AACnB,6BAAKf,KAAL,CAAWe,QAAX;AACH;;AAED,wBAAG,KAAKf,KAAL,CAAWgB,OAAX,KAAuB,OAA1B,EAAkC;AAC9B,4BAAG,KAAKT,OAAR,EAAgB;AACZ,6DAAc,KAAKA,OAAnB;AACH;AACD;AACA,6BAAKA,OAAL,GAAe,8BAAWH,SAASa,cAAT,CAAwB,KAAKR,GAA7B,CAAX,EAA8C,UAASE,IAAT,EAAc;AACvE,gCAAG,CAACA,IAAJ,EAAS;;AAELC,qCAAKC,QAAL,CAAc;AACVX,0CAAM;AADI,iCAAd,EAEG,YAAU;AACTU,yCAAKE,SAAL,CAAe,IAAf;AACA,qEAAcF,KAAKL,OAAnB;AACH,iCALD;AAMH;AACJ,yBAVc,CAAf;AAWH,qBAhBD,MAgBK;AAAE;AACH,4BAAG,KAAKA,OAAR,EAAgB;AACZ,6DAAc,KAAKA,OAAnB,EAA4B,WAA5B;AACH;AACD;AACA,6BAAKA,OAAL,GAAe,8BAAWH,SAASa,cAAT,CAAwB,KAAKR,GAA7B,CAAX,EAA8C,UAASE,IAAT,EAAc;;AAEvE,gCAAG,CAACA,IAAJ,EAAS;AACLC,qCAAKC,QAAL,CAAc;AACVX,0CAAM;AADI,iCAAd,EAEG,YAAU;AACTU,yCAAKE,SAAL,CAAe,IAAf;AACA,qEAAcF,KAAKL,OAAnB,EAA4B,WAA5B;AACH,iCALD;AAMH;AACJ,yBAVc,EAUZ,WAVY,EAUCK,KAAKJ,GAVN,EAUW,IAVX,CAAf;AAWH;AAEJ,iBAxCD,MAwCK;;AAED,wBAAG,KAAKR,KAAL,CAAWkB,SAAd,EAAwB;AACpB,6BAAKlB,KAAL,CAAWkB,SAAX;AACH;AAEJ;AACJ,aArDD;AAsDH;;AAED;;;;uCACeR,C,EAAE;;AAEbA,cAAES,eAAF;AACAT,cAAEU,cAAF;;AAEA,gBAAG,CAAC,KAAKnB,KAAL,CAAWC,IAAf,EAAoB;AAChB,qBAAKmB,UAAL,CAAgBX,CAAhB,EAAmB,IAAnB;AACH;;AAED;AACA,gBAAG,KAAKV,KAAL,CAAWsB,QAAX,CAAoBtB,KAApB,CAA0BuB,WAA7B,EAAyC;AACrC,qBAAKvB,KAAL,CAAWsB,QAAX,CAAoBtB,KAApB,CAA0BuB,WAA1B,CAAsCb,CAAtC;AACH;AACJ;;AAED;;;;uCACeA,C,EAAE;;AAEb,iBAAKW,UAAL,CAAgBX,CAAhB,EAAmB,CAAC,KAAKT,KAAL,CAAWC,IAA/B;;AAEA;AACA,gBAAG,KAAKF,KAAL,CAAWsB,QAAX,CAAoBtB,KAApB,CAA0BwB,OAA7B,EAAqC;AACjC,qBAAKxB,KAAL,CAAWsB,QAAX,CAAoBtB,KAApB,CAA0BwB,OAA1B,CAAkCd,CAAlC;AACH;AACD,gBAAG,KAAKV,KAAL,CAAWwB,OAAd,EAAsB;AAClB,qBAAKxB,KAAL,CAAWwB,OAAX,CAAmBd,CAAnB;AACH;AACJ;;AAED;;;;+CACuB;AACnB,gBAAG,KAAKV,KAAL,CAAWgB,OAAX,KAAuB,OAA1B,EAAkC;AAC9B,oBAAG,KAAKT,OAAR,EAAgB;AACZ,qDAAc,KAAKA,OAAnB,EAA4B,WAA5B;AACH;AACJ,aAJD,MAIK;AACD,iDAAc,KAAKA,OAAnB;AACH;AACD,gBAAGkB,UAAU,IAAb,EAAmB;AACf,qBAAKtB,GAAL,CAASuB,UAAT,CAAoB,IAApB;AACH,aAFD,MAEK;AACD,qBAAKvB,GAAL,CAASwB,MAAT;AACH;AACD,+BAASC,sBAAT,CAAgC,KAAKzB,GAArC;AACH;;;4CAEmB;;AAEhB;AACA,iBAAKK,GAAL,GAAW,mBAASqB,WAAT,CAAqB,IAArB,CAAX;;AAEA,gBAAG,KAAK7B,KAAL,CAAWE,IAAd,EAAmB;AACf,qBAAK4B,cAAL;AACH;AACJ;;;2CAEkBC,S,EAAYC,S,EAAW;AACtC,gBAAGD,UAAU7B,IAAV,KAAmB,KAAKF,KAAL,CAAWE,IAAjC,EAAsC;AAClC,qBAAK4B,cAAL;AACH;AACJ;;AAED;;;;iCACQ;AACJ,gBAAG,KAAKrB,GAAL,KAAa,IAAhB,EAAqB;AACjB,qBAAKA,GAAL,GAAW,gBAAgB,IAAIwB,IAAJ,GAAWC,OAAX,EAA3B;AACH;AACJ;;AAED;;;;kCACUvB,I,EAAK;AACX,iBAAKwB,MAAL;AACA,gBAAIC,MAAMhC,SAASa,cAAT,CAAwB,KAAKR,GAA7B,CAAV;AACA;AACA,gBAAG,CAAC2B,GAAD,IAAQzB,IAAX,EAAgB;AACZP,yBAASiC,IAAT,CAAcC,WAAd,CAA0B,KAAKnC,GAA/B;AACA,mCAASoC,MAAT,CAAgB;AACZ,+BAAW,KAAKvC,KAAL,CAAWwC,SADV;AAEZ,2BAAO,KAAKxC,KAAL,CAAWyC,KAFN;AAGZ,yBAAK,KAAKhC,GAHE;AAIZ,8BAAU,KAAKiC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAJE;AAKZ,0BAAM,KAAK1C,KAAL,CAAWC,IALL;AAMZ,2BAAO,KAAKF,KAAL,CAAW4C,KANN;AAOZ,6BAAS,KAAK5C,KAAL,CAAW6C,OAPR,GAAhB,EAOoC,KAAK1C,GAPzC;AAQH;AACJ;;AAED;;;;iCACQ;AAAA,yBAEmE,KAAKH,KAFxE;AAAA,gBAECsB,QAFD,UAECA,QAFD;AAAA,gBAEWN,OAFX,UAEWA,OAFX;AAAA,gBAEoBD,QAFpB,UAEoBA,QAFpB;AAAA,gBAE8BG,SAF9B,UAE8BA,SAF9B;AAAA,gBAEyC4B,WAFzC,UAEyCA,WAFzC;AAAA,gBAE0DC,KAF1D;AAAA,gBAGIC,UAHJ,0CAGkB1B,SAAStB,KAH3B,OAGkC;;AACtC,gBAAIiD,QAAQ,gBAAMC,QAAN,CAAeC,IAAf,CAAoB7B,QAApB,CAAZ;AACA,gBAAItB,QAAQ,EAAZ;AACA;AACA,gBAAGgB,YAAY,OAAf,EAAuB;AACnBhB,sBAAM,aAAN,IAAuB,KAAKoD,cAAL,CAAoBT,IAApB,CAAyB,IAAzB,CAAvB;AACH,aAFD,MAEK;AACD3C,sBAAM,SAAN,IAAmB,KAAK8B,cAAL,CAAoBa,IAApB,CAAyB,IAAzB,CAAnB;AACH;AACD3C,oBAAQ,sBAAO,4BAAKgD,UAAL,GAAkBhD,KAAlB,CAAP,CAAR;AACA,gBAAIoC,MAAM,gBAAMiB,YAAN,CAAmBJ,KAAnB,EAA0BjD,KAA1B,CAAV;;AAEA,mBAAOoC,GAAP;AACH;;;;;AAGL;;;AApMMrC,O,CAGKuD,Y,GAAe;AAClBtC,aAAS,OADS;AAElBd,UAAM,KAFY;AAGlBa,cAAU,IAHQ,EAGD;AACjBG,eAAW,IAJO,CAIF;AAJE,C;eAkMXnB,O;;;;;;;;;kCArMTA,O","file":"Popover.js","sourcesContent":["'use strict';\r\nimport React,  { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PopoverBox from './PopoverBox';\r\nimport {position, offsetLeft, offsetTop} from '../utils/offset';\r\nimport { getXY,  clickBlank,  offClickBlank } from '../utils/triggerBlank';\r\nimport assign from '../utils/assign';\r\n\r\nclass Popover extends Component {\r\n\r\n    // 默认参数\r\n    static defaultProps = {\r\n        trigger: 'hover', \r\n        show: false, \r\n        showBack: null,  // 显示时候的回调\r\n        closeBack: null // 关闭时候的回调\r\n    }\r\n    \r\n    // 构造函数\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n        this.div = document.createElement('div');\r\n        this.div.setAttribute('class', 'mt-div');\r\n        this.handler = null;\r\n        this.btn = null;\r\n        this.mid = null;\r\n    }\r\n\r\n    // getSetPlace\r\n    getPlace() {\r\n        return position(this.btn);\r\n    }\r\n\r\n    // 隐藏显示控制\r\n    showOrHide(e, mark){\r\n        let self = this;\r\n\r\n        this.setState({\r\n            show: mark\r\n        }, function(){\r\n            this.renderDiv(true);\r\n\r\n            // 如果是显示，就绑定点击空白事件\r\n            if(mark){\r\n\r\n                if(this.props.showBack){\r\n                    this.props.showBack();\r\n                }\r\n\r\n                if(this.props.trigger === 'click'){\r\n                    if(this.handler){\r\n                        offClickBlank(this.handler);\r\n                    }\r\n                    // 绑定事件\r\n                    this.handler = clickBlank(document.getElementById(this.mid), function(mark){\r\n                        if(!mark){\r\n\r\n                            self.setState({\r\n                                show: false\r\n                            }, function(){\r\n                                self.renderDiv(true);\r\n                                offClickBlank(self.handler);\r\n                            });\r\n                        }\r\n                    });\r\n                }else{ // 如果是hover 事件\r\n                    if(this.handler){\r\n                        offClickBlank(this.handler, 'mousemove');\r\n                    }\r\n                    // 鼠标进入，如果显示，绑定mousemove事件\r\n                    this.handler = clickBlank(document.getElementById(this.mid), function(mark){\r\n\r\n                        if(!mark){\r\n                            self.setState({\r\n                                show: false\r\n                            }, function(){\r\n                                self.renderDiv(true);\r\n                                offClickBlank(self.handler, 'mousemove');\r\n                            });\r\n                        }\r\n                    }, 'mousemove', self.btn, true);\r\n                }\r\n                \r\n            }else{\r\n\r\n                if(this.props.closeBack){\r\n                    this.props.closeBack();\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    // 鼠标进入\r\n    onMouseHandler(e){\r\n\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        \r\n        if(!this.state.show){\r\n            this.showOrHide(e, true);\r\n        }\r\n\r\n        // 保留原来的事件\r\n        if(this.props.children.props.onMouseMove){\r\n            this.props.children.props.onMouseMove(e);\r\n        }\r\n    }\r\n\r\n    // 点击事件\r\n    onClickHandler(e){\r\n\r\n        this.showOrHide(e, !this.state.show);\r\n\r\n        // 保留原来的事件\r\n        if(this.props.children.props.onClick){\r\n            this.props.children.props.onClick(e);\r\n        }\r\n        if(this.props.onClick){\r\n            this.props.onClick(e);\r\n        }\r\n    }\r\n\r\n    // 卸载组件\r\n    componentWillUnmount() {\r\n        if(this.props.trigger === 'hover'){\r\n            if(this.handler){\r\n                offClickBlank(this.handler, 'mousemove');\r\n            }\r\n        }else{\r\n            offClickBlank(this.handler);\r\n        }\r\n        if(MT_MS === 'IE') {\r\n            this.div.removeNode(true);\r\n        }else{\r\n            this.div.remove();\r\n        }\r\n        ReactDOM.unmountComponentAtNode(this.div);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // 获取原生DOM\r\n        this.btn = ReactDOM.findDOMNode(this);\r\n\r\n        if(this.props.show){\r\n            this.onClickHandler();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps,  prevState) {\r\n        if(prevProps.show !== this.props.show){\r\n            this.onClickHandler();\r\n        }     \r\n    }\r\n\r\n    // 设置mid\r\n    setMid(){\r\n        if(this.mid === null){\r\n            this.mid = 'mt_popover_' + new Date().getTime();\r\n        }\r\n    }\r\n\r\n    // 渲染div\r\n    renderDiv(mark){\r\n        this.setMid();\r\n        var dom = document.getElementById(this.mid);\r\n        // 首次渲染即可\r\n        if(!dom || mark){\r\n            document.body.appendChild(this.div);\r\n            ReactDOM.render(<PopoverBox \r\n                className={this.props.className} \r\n                style={this.props.style} \r\n                mid={this.mid} \r\n                getPlace={this.getPlace.bind(this)} \r\n                show={this.state.show} \r\n                place={this.props.place} \r\n                content={this.props.content}/>, this.div);\r\n        }\r\n    }\r\n\r\n    // 渲染\r\n    render(){\r\n\r\n        let {children, trigger, showBack, closeBack, onMouseOver,  ...other} = this.props;\r\n        let {...otherChild} = children.props; // 完全复制子元素\r\n        let child = React.Children.only(children);\r\n        let props = {};\r\n        // 重写事件\r\n        if(trigger === 'hover'){\r\n            props['onMouseMove'] = this.onMouseHandler.bind(this);\r\n        }else{\r\n            props['onClick'] = this.onClickHandler.bind(this);\r\n        }\r\n        props = assign([{...otherChild}, props]);\r\n        let dom = React.cloneElement(child, props);\r\n\r\n        return dom;\r\n    }\r\n}\r\n\r\n// 主页\r\nexport default Popover;"]}
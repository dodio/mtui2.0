{"version":3,"sources":["../../dev/mtui/datePicker/DatePicker.jsx"],"names":["DatePicker","props","dateToOBj","state","show","nowDate","clear","inputDate","div","document","createElement","setAttribute","handler","mid","refBtn","date","mark","setState","Date","setMid","self","dom","getElementById","body","appendChild","render","range","format","setPlace","bind","modalStyle","modalClassName","resetDays","showOrHide","callback","data","e","box","renderDiv","showBack","onChange","obj","key","parseInt","str","replace","_btn","style","display","dateVal","val","split","year","month","day","visible","defaultValue","value","handleClick","prevProps","MT_MS","removeNode","remove","unmountComponentAtNode","nextProps","className","size","datePickers","suffix","validateInfo","other","cName","dayval","push","c","join","placeholder","defaultProps"],"mappings":"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","file":"DatePicker.js","sourcesContent":["'use strict';\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { getMDay, weekNumber, judgeDate, addAndDelOneMonth, getDateNow, formatDate, setHHMMSS, setDays, setMonths } from '../dateCore/dateCore';\r\nimport DatePickerBox from '../dateCore/DatePickerBox';\r\nimport { position } from '../utils/offset';\r\nimport { getXY, clickBlank, offClickBlank } from '../utils/triggerBlank';\r\n\r\nclass DatePicker extends Component {\r\n\r\n    // 默认参数\r\n    static defaultProps = {\r\n        placeholder: '日期',\r\n        showBack: null,  // 显示时候的回调\r\n        onChange: function () {\r\n            // ...\r\n        },  // 关闭时候的回调\r\n        modalClassName: '',\r\n        validateInfo: null,\r\n        format: 'yyyy-mm-dd' // 格式化\r\n    }\r\n\r\n    // 构造函数\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            nowDate: null,\r\n            clear: false,\r\n            inputDate: null\r\n        };\r\n        this.div = document.createElement('div');\r\n        this.div.setAttribute('class', 'mt-div');\r\n        this.handler = null;\r\n        this.mid = null;\r\n        this.refBtn = null;\r\n    }\r\n\r\n    // 重新渲染\r\n    resetDays(date, mark) {\r\n        if (mark) {\r\n            this.setState({\r\n                nowDate: date,\r\n                inputDate: date\r\n            });\r\n        } else {\r\n            this.setState({\r\n                nowDate: date\r\n            });\r\n        }\r\n    }\r\n\r\n    // 设置 mid\r\n    setMid() {\r\n        if (this.mid === null) {\r\n            this.mid = 'mt_date_' + +new Date();\r\n        }\r\n    }\r\n\r\n    setPlace() {\r\n        return position(this.refBtn);\r\n    }\r\n\r\n    // 渲染div mark == true 表示更新\r\n    renderDiv(mark) {\r\n\r\n        this.setMid();\r\n\r\n        var self = this;\r\n        var dom = document.getElementById(this.mid);\r\n        // 首次渲染即可\r\n        if (!dom || mark) {\r\n            if (!mark) {\r\n                document.body.appendChild(this.div);\r\n            }\r\n            ReactDOM.render(<DatePickerBox\r\n                nowDate={this.state.nowDate}\r\n                range={this.props.range}\r\n                format={this.props.format}\r\n                mid={this.mid}\r\n                setPlace={this.setPlace.bind(this)}\r\n                show={this.state.show}\r\n                modalStyle={this.props.modalStyle}\r\n                modalClassName={this.props.modalClassName}\r\n                resetDays={this.resetDays.bind(this)}\r\n                showOrHide={this.showOrHide.bind(this)} />, this.div); // \r\n        }\r\n    }\r\n\r\n    // 隐藏显示\r\n    showOrHide(show, callback, data, e) {\r\n        let box = document.getElementById(this.mid);\r\n\r\n        // 如果没有，初始化一个\r\n        if (!box) {\r\n            this.renderDiv();\r\n        }\r\n\r\n        this.setState({\r\n            show: !show\r\n        }, () => {\r\n            if (this.state.show) {\r\n                if (this.props.showBack) {\r\n                    this.props.showBack();\r\n                }\r\n            } else {\r\n                if (this.props.onChange && data && judgeDate(data.obj, this.props.range)) {\r\n                    this.setState({\r\n                        clear: data.clear\r\n                    });\r\n\r\n                    // 数据过滤\r\n                    for (let key in data.obj) {\r\n                        if (data.obj[key]) {\r\n                            data.obj[key] = parseInt(data.obj[key], 10);\r\n                        } else {\r\n                            delete data.obj[key];\r\n                        }\r\n                    }\r\n                    data.str = data.str.replace(/-NaN/g, '');\r\n                    data.str = data.str.replace(/-null/g, '');\r\n                    data.str = data.str.replace(/-undefined/g, '');\r\n\r\n                    // 在范围内修改才有效\r\n                    this.props.onChange(e, data);\r\n                }\r\n            }\r\n\r\n            // 修改input 里面的值\r\n            if (data && judgeDate(data.obj, this.props.range)) {\r\n                this.setState({\r\n                    inputDate: data.obj\r\n                });\r\n            }\r\n\r\n            if (callback) {\r\n                callback(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    // 点击事件\r\n    handleClick(e) {\r\n        let _btn = document.getElementById(this.mid);\r\n        if (_btn && _btn.style.display === 'block') {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        this.showOrHide(self.state.show);\r\n        if (this.handler) {\r\n            offClickBlank(self.handler);\r\n        }\r\n        // 绑定点击空白事件\r\n        this.handler = clickBlank(\r\n            document.getElementById(self.mid),\r\n            function (mark) {\r\n                if (!mark) {\r\n                    self.showOrHide(true);\r\n                    offClickBlank(self.handler);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // xxxx-xx-xx　转换成 obj\r\n    dateToOBj = (dateVal) => {\r\n        let date = null;\r\n        if (dateVal) {\r\n            let val = dateVal.split('-');\r\n            date = {\r\n                year: parseInt(val[0], 10) || null,\r\n                month: parseInt(val[1], 10) || null,\r\n                day: parseInt(val[2], 10) || null\r\n            };\r\n        } else {\r\n            date = getDateNow();\r\n            this.setState({\r\n                clear: true,\r\n                show: this.props.visible ? true : false\r\n            });\r\n        }\r\n\r\n        return date;\r\n    }\r\n\r\n    // 渲染前\r\n    componentWillMount() {\r\n        // 初始化日期 默认是当前日期\r\n        let dateVal = this.props.defaultValue || this.props.value;\r\n        this.resetDays(this.dateToOBj(dateVal), true);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.visible) {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    // 更新弹窗里面的数据\r\n    componentDidUpdate(prevProps) {\r\n        this.renderDiv(true);\r\n    }\r\n\r\n    // 卸载组件\r\n    componentWillUnmount() {\r\n        offClickBlank(this.handler);\r\n        if(MT_MS === 'IE') {\r\n            this.div.removeNode(true);\r\n        }else{\r\n            this.div.remove();\r\n        }\r\n        ReactDOM.unmountComponentAtNode(this.div);\r\n    }\r\n\r\n    // 如果 value 更新\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.value !== this.props.value) {\r\n            this.setState({\r\n                clear: nextProps.value ? false : true,\r\n                nowDate: this.dateToOBj(nextProps.value),\r\n                inputDate: this.dateToOBj(nextProps.value)\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { mid, format, showBack, range, modalClassName, defaultValue, value, className, size, datePickers, visible, suffix, validateInfo, onChange, ...other } = this.props;\r\n        var cName = ['mt-input mt-input-date mt-input-suffix-out'];\r\n        var dayval = formatDate(this.state.inputDate, this.props.format).val;\r\n        if (className) {\r\n            cName.push(className);\r\n        }\r\n        cName.push('mt-input-' + (size ? size : 'nm'));\r\n        if (mid) {\r\n            this.mid = mid;\r\n        }\r\n        return <span ref={(c) => { this.refBtn = c; }} className={cName.join(' ')} onClick={this.handleClick.bind(this)}  >\r\n            <input\r\n                value={this.state.clear ? '' : dayval}\r\n                readOnly\r\n                type=\"text\"\r\n                placeholder={this.props.placeholder}\r\n                {...other} />\r\n            {validateInfo ? <span className=\"mt-input-suffix\">{suffix}</span> : <span className=\"mt-input-suffix\"><i className=\"iconfont icon-date\"></i></span>}\r\n            {validateInfo}\r\n        </span>;\r\n    }\r\n}\r\n\r\n// 主页\r\nexport default DatePicker;"]}